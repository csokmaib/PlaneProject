@using PlaneProject.Models

@model Player

@{
}

<style>
.cellCss {
    width:30px;height:30px;border:solid;padding:unset;text-align:center;cursor: crosshair;
}
.axisCss {
    width:30px;height:30px;padding:unset;
}
.placedPlaneCss {
    background-color:green !important;
}
.hitPlaneCss {
    background-color:orange !important;
}
.deadPlaneCss {
    background-color:red !important;
}
.wrongPlaneCss {
    background-color:yellow !important;
}
</style>


<div id="waitForOpponentMsg"></div>


@*<input type="text" id="fire" />
<input type="button" id="fireButton" value="Fire" />
<div id="fireResult"></div>*@

<br />

<div id="gameDiv">
    <div style="float:left;padding-right:50px;">
        <p><b>Own grid:</b></p>
        <table id="ownGrid" class="table table-sm" style="width:330px">
            <tbody>
            </tbody>
        </table>
        <input type="button" id="setPlanes" value="Save Planes" />
        <div id="planeValidator"></div>
    </div>
    <div>
        <p><b>Opponent grid:</b></p>
        <table id="opponentGrid" class="table table-sm"  style="width:330px">
            <tbody>
            </tbody>
        </table>
    </div>
    
    <input type="button" id="startButton" value="Start the game" />
</div>


<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script>
$(document).ready(function() {
    createGrid("ownGrid", "own");
    createGrid("opponentGrid", "opp");
});

function createGrid(tableName, tableOwn)
{
    var gridInnerHtml = '';
    var letterAxis = '';
    var letter = '';
    var cells = '';
    for (var x=10; x>=1; x--)
    {
        gridInnerHtml = gridInnerHtml + '<tr>';
        gridInnerHtml = gridInnerHtml + '<th class="axisCss">'+x+'</th>';
        for (l = 0; l < 10; l++)
        {
            letter = (l+10).toString(36).toUpperCase();
            if (tableOwn == "opp")
            {
                var planePart = {
                    X: x,
                    Y: letter
                };
                cells = '<td id="'+ tableOwn +'_'+ x + letter +'" class="cellCss" onclick="fire('+ planePart +')">'+ x + letter +'</td>';
            }
            else
            {// onclick="setPlane('+ x + ',\'' + letter +'\')"
                cells = '<td id="'+ tableOwn +'_'+ x + letter +'" class="cellCss" onclick="addClickedCss(this)">'+ x + letter +'</td>';
            }
            gridInnerHtml = gridInnerHtml + cells;
            if (x == 1)
            {
                letterAxis = letterAxis + '<th>'+letter+'</th>';
            }
        }
        gridInnerHtml = gridInnerHtml + '</tr>';
    }
    gridInnerHtml = gridInnerHtml + '<tr><th></th>' + letterAxis + '</tr>';
    document.getElementById(tableName).firstElementChild.innerHTML = gridInnerHtml;
}

function fire(planePart)
{
    console.log('pressed fire '+ planePart.X + planePart.Y);
    //connection.invoke("SendFiring", planePart).catch(function (err) {
    //    return console.error(err.toString());
    //});
}


var placedPlanes = [];
var _gameId = "";

function addClickedCss(row)
{
    row.classList.add('placedPlaneCss');    
    var coordinates = $(row).attr('id').replace('own_', '');
    var x = coordinates.replace(/[^0-9.]/g, '');
    var y = coordinates.replace(x, '');
    var planePart = {
        X: parseInt(x),
        Y: y
    };
    placedPlanes.push(planePart);
}


    "use strict";
    var connection = new signalR.HubConnectionBuilder().withUrl("/communicationHub").build();

    connection.start().then(function () {
        $('#gameDiv').hide();
        console.log('AddWaitingPlayerIntoQueue');
        document.getElementById("waitForOpponentMsg").innerHTML = "Waiting for opponent player ...";

        connection.invoke("AddWaitingPlayerIntoQueue").catch(function (err) {
            return console.error(err.toString());
        });
    }).catch(function (err) {
        return console.error(err.toString());
    });
    /*
    $(document).ready(function() {
        console.log('AddWaitingPlayerIntoQueue');
        document.getElementById("waitForOpponentMsg").innerHTML = "Waiting for opponent player ...";

        connection.invoke("AddWaitingPlayerIntoQueue").catch(function (err) {
            return console.error(err.toString());
        });
    });   */

    connection.on("GameStarted", function (gameId) {
        console.log('GameStarted with gameId: ' + gameId);
        _gameId = gameId;
        $('#gameDiv').show();
        document.getElementById("waitForOpponentMsg").innerHTML = "Let's begin the game. Set your planes!";
    });


    connection.on("ValidatePlane", function (message) {
        console.log('ValidatePlane');
        document.getElementById("planeValidator").innerHTML = message;
    });
    connection.on("ReceiveFiringResult", function (opponentId, x, y) {
        console.log('ReceiveFiringResult');
        document.getElementById("fireResult").innerHTML = opponentId + ',' + x + ',' + y;
    });


    
$('#setPlanes').click(function(){
    console.log('clicked setPlanes');
    console.log(placedPlanes);

    connection.invoke("SetPlanes", placedPlanes, _gameId).catch(function (err) {
        return console.error(err.toString());
    });
   
});



</script>